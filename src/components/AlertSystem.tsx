import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { useState, useEffect } from "react";

interface Alert {
  id: string;
  type: "info" | "warning" | "critical";
  message: string;
  time: string;
}

const AlertSystem = () => {
  const [alerts, setAlerts] = useState<Alert[]>([
    {
      id: "1",
      type: "warning",
      message: "–†–µ–π—Å DP405 –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —ç–∫—Å—Ç—Ä–µ–Ω–Ω—É—é –ø–æ—Å–∞–¥–∫—É",
      time: "14:23",
    },
    {
      id: "2",
      type: "info",
      message: "–ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è: –≤–µ—Ç–µ—Ä 15 –∫–º/—á",
      time: "14:20",
    },
  ]);

  useEffect(() => {
    const interval = setInterval(() => {
      const emergencyMessages = [
        "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ç–∏—Ü–∞ –≤ –∑–æ–Ω–µ –≤–∑–ª–µ—Ç–Ω–æ–π –ø–æ–ª–æ—Å—ã",
        "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å —É —Ä–µ–π—Å–∞ SU2156",
        "–ú–µ—Ç–µ–æ—É—Å–ª–æ–≤–∏—è —É—Ö—É–¥—à–∞—é—Ç—Å—è",
        "–ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –≤–æ–∑–¥—É—à–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞",
        "–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–Ω–µ–æ—á–µ—Ä–µ–¥–Ω—É—é –ø–æ—Å–∞–¥–∫—É",
      ];

      if (Math.random() < 0.3) {
        const newAlert: Alert = {
          id: Date.now().toString(),
          type: Math.random() < 0.3 ? "critical" : "warning",
          message:
            emergencyMessages[
              Math.floor(Math.random() * emergencyMessages.length)
            ],
          time: new Date().toLocaleTimeString("ru-RU", {
            hour: "2-digit",
            minute: "2-digit",
          }),
        };

        setAlerts((prev) => [newAlert, ...prev.slice(0, 4)]);
      }
    }, 8000);

    return () => clearInterval(interval);
  }, []);

  const getAlertColor = (type: string) => {
    switch (type) {
      case "critical":
        return "border-l-red-500 bg-red-500/10";
      case "warning":
        return "border-l-yellow-500 bg-yellow-500/10";
      default:
        return "border-l-blue-500 bg-blue-500/10";
    }
  };

  return (
    <Card className="bg-slate-800 border-slate-700">
      <CardHeader>
        <CardTitle className="text-violet-400">üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</CardTitle>
      </CardHeader>
      <CardContent className="space-y-2">
        {alerts.map((alert) => (
          <div
            key={alert.id}
            className={`p-3 rounded border-l-4 ${getAlertColor(alert.type)} animate-fade-in`}
          >
            <div className="flex justify-between items-start">
              <p className="text-sm text-white">{alert.message}</p>
              <span className="text-xs text-slate-400 ml-2">{alert.time}</span>
            </div>
          </div>
        ))}
      </CardContent>
    </Card>
  );
};

export default AlertSystem;
